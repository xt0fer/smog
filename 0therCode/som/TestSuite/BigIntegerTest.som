"

$Id: BigIntegerTest.som 30 2009-07-31 12:20:25Z michael.haupt $

Copyright (c) 2001-2007 see AUTHORS file

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the 'Software'), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"

BigIntegerTest = (

    "The 'run' method is called by the testing harness with the harness as its
     argument"
    
    run: harness = (| bi i a |
    
        "bi contains 2147483648 - the smallest BigInteger value"
        "i contains 2147483647 - the largest Integer value"
        
        "Test that normal integers work"
        a := 2147483646.
        a asString = '2147483646'
            ifFalse: [
                harness fail: self because: 'failed to assign to integer' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    fail: self
                    because: 'failed to create Integer variable' ].
        a := a + 1.
        a asString = '2147483647'
            ifFalse: [ harness fail: self because: 'failed to add to integer' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    fail: self
                    because: 'addition caused undue conversion to something other than Integer' ].
        
        " Store the Integer in i"
        i := a.
        
        " ------------------------- Addition --------------------------------- "
        "Test conversion from Integer to BigInteger"
        a := a + 1.
        a asString = '2147483648'
            ifFalse: [
                harness
                    fail: self
                    because: 'addition exceeding range of Integer failed' ].
        a class asString = 'BigInteger'
            ifFalse: [
                harness
                    fail: self
                    because: 'addition exceeding range of Integer caused conversion to something other than BigInteger' ].
        
        " Store the BigInteger in bi"
        bi := a.
        
        "Test conversion from BigInteger to Integer"
        a := a + (-1).
        a asString = '2147483647'
            ifFalse: [
                harness
                    fail: self
                    because: 'addition into range of Integer failed' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    warn: self
                    because: 'addition into range of Integer did not cause conversion to Integer' ].
        
        " ------------------------- Subtraction ------------------------------ "
        "Test conversion from Integer to BigInteger"
        a := i - (-1).
        a asString = '2147483648'
            ifFalse: [
                harness
                    fail: self
                    because: 'subtraction exceeding range of Integer failed' ].
        a class asString = 'BigInteger'
            ifFalse: [
                harness
                    fail: self
                    because: 'subtraction exceeding range of Integer caused conversion to something other than BigInteger' ].
        
        "Test conversion from BigInteger to Integer"
        a := a - 1.
        a asString = '2147483647'
            ifFalse: [
                harness
                    fail: self
                    because: 'subtraction into range of Integer failed' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    warn: self
                    because: 'subtraction into range of Integer did not cause conversion to Integer' ].
        
        " ------------------------- Multiplication --------------------------- "
        "Test conversion from Integer to BigInteger"
        a := i * 2.
        a asString = '4294967294'
            ifFalse: [
                harness
                    fail: self
                    because: 'multiplication exceeding range of Integer failed' ].
        a class asString = 'BigInteger'
            ifFalse: [
                harness
                    fail: self
                    because: 'multiplication exceeding range of Integer caused conversion to something other than BigInteger' ].
        
        "Test conversion from BigInteger to Integer"
        a := a * 0.
        a asString = '0'
            ifFalse: [
                harness
                    fail: self
                    because: 'multiplication into range of Integer failed' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    warn: self
                    because: 'multiplication into range of Integer did not cause conversion to Integer' ].
        
        " ------------------------- Division --------------------------------- "
        "Test conversion from Integer to BigInteger - TODO requires doubles
        a := i / 2.
        a asString = '4294967294'
            ifFalse: [
                harness
                    fail: self
                    because: 'division exceeding range of Integer failed' ].
        a class asString = 'BigInteger'
            ifFalse: [
                harness
                    fail: self
                    because: 'division exceeding range of Integer caused conversion to something other than BigInteger' ].
        "
        
        "Test conversion from BigInteger to Integer"
        a := bi / 2.
        a asString = '1073741824'
            ifFalse: [
                harness
                    fail: self
                    because: 'division into range of Integer failed' ].
        a class asString = 'Integer'
            ifFalse: [
                harness
                    warn: self
                    because: 'division into range of Integer did not cause conversion to Integer' ].
        
        "Canonic values"
        a := bi.
        i := bi.
        a = i ifFalse: [ harness fail: self because: 'equality check failed' ].
        a == i ifFalse: [ harness fail: self because: 'identity check failed' ].
    )
    
)
