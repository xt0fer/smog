"Port of  https://github.com/dropbox/pyston/blob/master/microbenchmarks/polymorphism.py
# This microbenchmark is inspired by the ICBD type checker, which has a 'scoring' phase at
# the end of the analysis.
# I'm not sure how representative this file is of the type checker, or even if
# this is really a polymorphism test or maybe just a tree test, or some cross of the two.
"

Polymorphism = Benchmark (
  | d |
  rand = (
    d := (d * 1.24591 + 0.195) % 1.0.
    ^ d
  )
  
  makeRandom: x = (
    self rand > x   ifTrue: [^ Simple new].
    self rand < 0.3 ifTrue: [
      ^ Union with: (
          Array with: (self makeRandom: 0.5 * (x - 1))
                with: (self makeRandom: 0.5 * (x - 1)))].
    ^ Poly1 with: (self makeRandom: x - 1)
  )

  benchmark = (
    | r |
    d := 0.0.
    r := self makeRandom: 10000.
    1000 timesRepeat: [r score]
  )
)