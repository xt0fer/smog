"

$Id: HashTest.som 30 2009-07-31 12:20:25Z michael.haupt $

Copyright (c) 2001-2007 see AUTHORS file

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the 'Software'), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"

HashTest = (

    "The 'run' method is called by the testing harness with the harness as its
     argument"
    
    run: harness = (
        | ht string array t | 
        
        ht := Hashtable new.
        ht isEmpty
            ifFalse: [ harness fail: self because: 'New Hashtable not empty!' ].
        
        ht at: 'a' put: 'b'.
        (ht containsValue: 'b')
            ifFalse: [ harness fail: self because: '1 not in Hashtable' ].
        ht isEmpty
            ifTrue: [ harness fail: self because: 'Nonempty Hashtable empty!' ].
        ((ht size) = 1)
            ifFalse: [
                harness fail: self because: 'Hashtable has wrong size!' ].
        
        ht at: 'c' put: 'd'.
        ((ht size) = 2)
            ifFalse: [
                harness fail: self because: 'Hashtable has wrong size!' ].
        
        ht at: 1 put: 2.
        t := Hashtable new.
        ht at: Hashtable put: t.
        (ht containsValue: 'b')
            ifFalse: [ harness fail: self because: '1 not in Hashtable' ].
        (ht containsValue: 'd')
            ifFalse: [ harness fail: self because: '2 not in Hashtable' ].
        (ht containsValue: 2)
            ifFalse: [ harness fail: self because: '3 not in Hashtable' ].
        (ht containsValue: t)
            ifFalse: [ harness fail: self because: '4 not in Hashtable' ].
        (ht containsKey: Hashtable)
            ifFalse: [ harness fail: self because: 'key not found' ].
        
        ht clear.
        ht isEmpty
            ifFalse: [
                harness fail: self because: 'cleared hashtable is not empty!' ].
        ht size = 0
            ifFalse: [
                harness fail: self because: 'cleared hashtable has elements!' ].
        
        string := (ht get: 'a').
        (string = 'b')
            ifTrue: [ harness fail: self because: 'get from Hashtable' ].
    )
    
)

